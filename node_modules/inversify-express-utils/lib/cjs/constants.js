"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DEFAULT_ROUTING_ROOT_PATH = exports.NO_CONTROLLERS_FOUND = exports.DUPLICATED_CONTROLLER_NAME = exports.HTTP_VERBS_ENUM = exports.PARAMETER_TYPE = exports.METADATA_KEY = exports.TYPE = void 0;
/* eslint-disable @typescript-eslint/typedef */
/* eslint-disable @typescript-eslint/naming-convention */
exports.TYPE = {
    AuthProvider: Symbol.for('AuthProvider'),
    Controller: Symbol.for('Controller'),
    HttpContext: Symbol.for('HttpContext'),
};
exports.METADATA_KEY = {
    controller: 'inversify-express-utils:controller',
    controllerMethod: 'inversify-express-utils:controller-method',
    controllerParameter: 'inversify-express-utils:controller-parameter',
    httpContext: 'inversify-express-utils:httpcontext',
    middleware: 'inversify-express-utils:middleware',
};
var PARAMETER_TYPE;
(function (PARAMETER_TYPE) {
    PARAMETER_TYPE[PARAMETER_TYPE["REQUEST"] = 0] = "REQUEST";
    PARAMETER_TYPE[PARAMETER_TYPE["RESPONSE"] = 1] = "RESPONSE";
    PARAMETER_TYPE[PARAMETER_TYPE["PARAMS"] = 2] = "PARAMS";
    PARAMETER_TYPE[PARAMETER_TYPE["QUERY"] = 3] = "QUERY";
    PARAMETER_TYPE[PARAMETER_TYPE["BODY"] = 4] = "BODY";
    PARAMETER_TYPE[PARAMETER_TYPE["HEADERS"] = 5] = "HEADERS";
    PARAMETER_TYPE[PARAMETER_TYPE["COOKIES"] = 6] = "COOKIES";
    PARAMETER_TYPE[PARAMETER_TYPE["NEXT"] = 7] = "NEXT";
    PARAMETER_TYPE[PARAMETER_TYPE["PRINCIPAL"] = 8] = "PRINCIPAL";
})(PARAMETER_TYPE || (exports.PARAMETER_TYPE = PARAMETER_TYPE = {}));
var HTTP_VERBS_ENUM;
(function (HTTP_VERBS_ENUM) {
    HTTP_VERBS_ENUM["all"] = "all";
    HTTP_VERBS_ENUM["connect"] = "connect";
    HTTP_VERBS_ENUM["delete"] = "delete";
    HTTP_VERBS_ENUM["get"] = "get";
    HTTP_VERBS_ENUM["head"] = "head";
    HTTP_VERBS_ENUM["options"] = "options";
    HTTP_VERBS_ENUM["patch"] = "patch";
    HTTP_VERBS_ENUM["post"] = "post";
    HTTP_VERBS_ENUM["propfind"] = "propfind";
    HTTP_VERBS_ENUM["put"] = "put";
    HTTP_VERBS_ENUM["trace"] = "trace";
})(HTTP_VERBS_ENUM || (exports.HTTP_VERBS_ENUM = HTTP_VERBS_ENUM = {}));
const DUPLICATED_CONTROLLER_NAME = (name) => `Two controllers cannot have the same name: ${name}`;
exports.DUPLICATED_CONTROLLER_NAME = DUPLICATED_CONTROLLER_NAME;
exports.NO_CONTROLLERS_FOUND = 'No controllers have been found! Please ensure that you have register at least one Controller.';
exports.DEFAULT_ROUTING_ROOT_PATH = '/';
//# sourceMappingURL=constants.js.map