import { IMenu, IMenuItem } from "@delatte/shared/interfaces";
import { MenuRepository } from "../repositories/menu.repository";

// ğŸ“Œ Obtener todos los menÃºs de un restaurante
export const getMenusByRestaurantService = async (restaurantId: string): Promise<IMenu[]> => {
  return await MenuRepository.getMenusByRestaurant(restaurantId);
};

// ğŸ“Œ Crear un nuevo menÃº
export const createMenuService = async (menuData: Partial<IMenu>): Promise<IMenu> => {
  return await MenuRepository.createMenu(menuData);
};

// ğŸ“Œ Actualizar un menÃº existente
export const updateMenuService = async (menuId: string, updatedData: Partial<IMenu>): Promise<IMenu | null> => {
  return await MenuRepository.updateMenu(menuId, updatedData);
};

// ğŸ“Œ Eliminar un menÃº
export const deleteMenuService = async (menuId: string): Promise<IMenu | null> => {
  return await MenuRepository.deleteMenu(menuId);
};

// ğŸ“Œ Agregar un Ã­tem a un menÃº
export const addMenuItemService = async (menuId: string, itemData: IMenuItem): Promise<IMenu | null> => {
  return await MenuRepository.addMenuItem(menuId, itemData);
};

// ğŸ“Œ Eliminar un Ã­tem de un menÃº
export const removeMenuItemService = async (menuId: string, itemId: string): Promise<IMenu | null> => {
  return await MenuRepository.removeMenuItem(menuId, itemId);
};
